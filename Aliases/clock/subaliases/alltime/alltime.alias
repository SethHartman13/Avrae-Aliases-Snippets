embed
<drac2>
# *******************************************************
# * This work includes material written by Seth Hartman (aka ShadowsStride)
# * and is licensed under the Creative Commons Attribution 4.0 International 
# * License available at https://creativecommons.org/licenses/by/4.0/legalcode.
# *******************************************************


def search_key(query: str, key_list: list[str]) -> list[str]|None:
    """
    Searches for dictionary key.

    Args:
        query (str): The query being made
        key_list (list): List of keys

    Return:
        (list[str]|None): If it finds at least one match it returns list of matches, otherwise it returns None
    """

    # Creates list to store matches
    key_results = []

    # Checks each item if a match occurs
    for key in key_list:

        # If matches
        if query.lower() in key.lower():
            key_results.append(key)

        else:
            pass

    # Finds at least 1 match
    if len(key_results) > 0:
        return key_results

    # If it finds no matches
    else:
        return None


def calc_time(time:int) -> str:
    """
    Converts seconds into weeks, days, hours, minutes, seconds.
    
    Args:
        time(int): Time in seconds

    Return:
        (str): Result
    """

    result_list = []

    # Weeks
    if (weeks := time // 604800) > 0:
        if hours != 1:
            result_list.append(f"{weeks} weeks")
        
        else:
            result_list.append(f"{weeks} week")
    
    else:
        pass

    # Intermediary calc 1
    t1 = time % 604800

    # Days
    if (days := t1 // 86400) > 0:
        if days != 1:
            result_list.append(f"{days} days")
        
        else:
            result_list.append(f"{days} day")
    
    else:
        pass

    # Intermediary calc 2
    t2 = t1 % 86400

    # Hours
    if (hours := t2 // 3600) > 0:
        if hours != 1:
            result_list.append(f"{hours} hours")
        
        else:
            result_list.append(f"{hours} hour")
    
    else:
        pass

    # Intermediary calc 3
    t3 = t2 % 3600

    # Minutes
    if (minutes := t3 // 60) > 0:
        if minutes != 1:
            result_list.append(f"{minutes} minutes")
        
        else:
            result_list.append(f"{minutes} minute")
    
    else:
        pass

    # Seconds
    if (seconds := t3 % 60) > 0:
        if seconds != 1:
            result_list.append(f"{seconds} seconds")
        
        else:
            result_list.append(f"{seconds} second")
    
    else:
        pass

    return ", ".join(result_list)


def get_trackers() -> list[str]:
    """
    Gets the list of trackers for a player.

    Return:
        (list[str]): Result
    """

    # Pulls and checks if uvar exists
    all_server_test = get_uvar("clock_dict")

    # If the uvar exists
    if all_server_test:
        pass

    # If the uvar does not exist
    else:
        return -1, 'UVAR `clock_dict` does not exist'
    
    # Tries to convert the uvar to a dictionary
    try:
        all_server_dict = load_json(all_server_test)

    except:
        return -1, 'Problems loading dictionary'

    # Checks to see if the server id is in the uvar
    key_result = search_key(str(ctx.guild.id), all_server_dict.keys())

    if key_result:

        # Pulls names of every tracker
        for key, value in all_server_dict[key_result[0]].items():
            try:
                key_list.append(f"`{key}`: {calc_time(value[4])}")

            except:
                key_list.append(f"`{key}`: {calc_time(value[2])}")

        # If the list is length of 0, it will list "None"
        if len(key_list) != 0:
            pass

        else:
            key_list.append("None")
        
        return "\n".join(key_list), ""

    else:
        'None', ""

    
def main(input_list: list) -> list:
    """
    Main program function.
    
    Args:
        input_list(list[str]): List of inputs
    
    Output:
        (list[str]): Result
    """

    # Grabs tracker names, if any.
    f, error = get_trackers()

    # If there was no error
    if f != -1:
        return f"{ctx.author.display_name}: Current time trackers", f

    # If there was an error
    else:
        return f"{ctx.author.display_name} encountered an error", error


title, f = main(&ARGS&)


</drac2>
-title "{{title}}"
-thumb "https://raw.githubusercontent.com/SethHartman13/Avrae-Aliases-Snippets/master/Aliases/clock/image.png"
-f "{{f}}"
-footer "!clock list | Updated 10/3/23 | ShadowsStride"